<Window x:Class="Accord.MainApp.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Accord.MainApp"
        xmlns:conv="clr-namespace:Accord.MainApp.Converters"
        xmlns:pri="http://www.codeplex.com/prism"
        pri:ViewModelLocator.AutoWireViewModel="True"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Title="Code Accord by Bhabesh Acharya" WindowState="Maximized"  x:Name="mainViewWin">
    <!--<div>Icons made by <a href="https://www.flaticon.com/authors/smashicons" title="Smashicons">Smashicons</a> from <a href="https://www.flaticon.com/" 		    title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" 
    title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>-->
    <Grid>
        <Grid.Resources>
            <conv:AnalysisStatusToColorConverter x:Key="colorConv"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6.5*"></ColumnDefinition>
            <ColumnDefinition Width="3.5*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--<TextBox Margin="5" Grid.Row="0" Grid.Column="0" Width="{Binding ElementName=win, Path=ActualWidth}" 
                 FontSize="14" FontFamily="Calibri"
                 Text="{Binding InputText, Mode=TwoWay}" TextWrapping="Wrap" AcceptsReturn="True"/>
        <Button Content="Build" Margin="5" Grid.Row="1" HorizontalAlignment="Right" Grid.Column="0" Height="35" Width="100" Command="{Binding BuildCommand}"/>
        <TextBox IsReadOnly="True" Margin="5" Grid.Row="2" Grid.Column="0" Width="{Binding ElementName=win, Path=ActualWidth}"  Height="150"
                 Text="{Binding OutputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/> -->
        <TextBox IsReadOnly="True" Text="{Binding CodeRootLocation, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0.4,5" Width="{Binding ElementName=codeLV, Path=ActualWidth}">
            <TextBox.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Width" Value="120"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </TextBox.Resources>
        </TextBox>

        <UniformGrid Columns="3" Grid.Column="1">
            <Button ToolTip="Select Source Code Root Folder" Command="{Binding BrowseCommand}" >
                <Button.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Width" Value="60"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Image Source="Images/folder.png"></Image>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Height" Value="35"/>
                                <Setter Property="BorderBrush" Value="LightBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <Button Command="{Binding LoadCodeCommand}" ToolTip="Discover Source Code files">
                <Button.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Width" Value="60"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Image Source="Images/code.png"></Image>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Height" Value="35"/>
                                <Setter Property="BorderBrush" Value="LightBlue"/>
                            </Trigger>
                        </Style.Triggers>
                        
                    </Style>

                </Button.Resources>
            </Button>
            <Button ToolTip="Analyze Selected Source Files" Command="{Binding AnalyzeCommand}">
                <Button.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Width" Value="60"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Image Source="Images/analyze.png"></Image>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Height" Value="35"/>
                                <Setter Property="BorderBrush" Value="LightBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </UniformGrid>

        <ListView Margin="5" x:Name="codeLV" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" ItemsSource="{Binding SourceCodeFilesCollection, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedSourceCodeFile}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="FileName" Width="380" DisplayMemberBinding="{Binding FileName, UpdateSourceTrigger=PropertyChanged}">
                    </GridViewColumn>
                    <GridViewColumn Header="Ext" Width="100" DisplayMemberBinding="{Binding Extention, UpdateSourceTrigger=PropertyChanged}" />
                    <GridViewColumn Header="Path" Width="400" DisplayMemberBinding="{Binding FilePath, UpdateSourceTrigger=PropertyChanged}" />
                    <GridViewColumn Header="Analyze" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="50"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Status" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Ellipse Height="15" Width="15" Fill="{Binding AnalysisStatusInstance, Converter={StaticResource colorConv}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>


        <TabControl Margin="5" Grid.Row="1" Grid.Column="1">
            <TabItem Header="Violation Distribution">
                <!--<StackPanel Orientation="Vertical" Margin="5">
                    -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Content="Total Violations" Margin="5" FontSize="14" Foreground="Red"/>
                        <Label Content="{Binding TotalViolationsCount, UpdateSourceTrigger=PropertyChanged}" Margin="5" FontSize="14" Foreground="Red"/>
                    </StackPanel>

                    <lvc:PieChart Grid.Row="1" DataContext="{Binding ElementName=mainViewWin, Path=DataContext}" LegendLocation="Bottom" Hoverable="False" DataClick="PieChart_DataClick">
                        <lvc:PieChart.Series>
                            <lvc:PieSeries Title="Namespace" Values="{Binding NamespaceNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Class" Values="{Binding ClassNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Method" Values="{Binding MethodNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Parameter" Values="{Binding ParameterNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Public Prop" Values="{Binding PublicPropertyNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Protected Prop" Values="{Binding ProtectedPropertyNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Private Prop" Values="{Binding PrivatePropertyNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Public Field" Values="{Binding PublicFieldNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Protected Field" Values="{Binding ProtectedFieldNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Private Field" Values="{Binding PrivateFieldNameViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>
                            <lvc:PieSeries Title="Large Method" Values="{Binding LargeMethodViolationsChartValue}" DataLabels="True" LabelPoint="{Binding PointLabel}"/>

                        </lvc:PieChart.Series>
                    </lvc:PieChart>
                </Grid>
            </TabItem>
            <TabItem Header="Violation Table">
                <!--<StackPanel Orientation="Vertical">-->
                <!--<Button Margin="10" Command="{Binding ElementName=mainViewWin, Path=DataContext.ViolationSummaryCommand}" Content="Get Summary" Width="100" Height="30"/>-->
                <ListView Margin="10" VerticalAlignment="Top" ItemsSource="{Binding ElementName=mainViewWin, Path=DataContext.ViolationSummaryCollection, UpdateSourceTrigger=PropertyChanged}" MaxHeight="400">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Statistic" Width="200" DisplayMemberBinding="{Binding SummaryName, UpdateSourceTrigger=PropertyChanged}">
                            </GridViewColumn>
                            <GridViewColumn Header="Count" Width="100" DisplayMemberBinding="{Binding SummaryCount, UpdateSourceTrigger=PropertyChanged}" />
                        </GridView>
                    </ListView.View>
                </ListView>
                <!--</StackPanel>-->
            </TabItem>
        </TabControl>
        <!--<TextBox IsReadOnly="True" Margin="5" Grid.Row="1" Grid.Column="1" Width="300" 
                 FontSize="14" FontFamily="Calibri"
                 Text="{Binding ElementName=codeLV,Path=SelectedItem.OrigString, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True"/>-->

        <!--<FlowDocumentReader Background="LightGray" Width="580" Grid.Row="1" Grid.Column="1" Height="300" Margin="10">
            <FlowDocument>
                <Paragraph>
                    <Run Text="{Binding OrigCodeString, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                </Paragraph>
            </FlowDocument>
        </FlowDocumentReader>-->

        <Expander Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ExpandDirection="Up" Header="Analysis Results" IsExpanded="{Binding IsResultExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Grid  DataContext="{Binding ElementName=codeLV,Path=SelectedItem.AnalysisResultDataInstance, UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="6*"/>
                </Grid.ColumnDefinitions>

                <!--<TextBox Width="580" Grid.Row="0" IsReadOnly="True" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{Binding GeneratedInterfaceString}" ScrollViewer.CanContentScroll="True"></TextBox>-->

                <!--<FlowDocumentReader Background="LightGray" Width="580" Grid.Row="0" Grid.Column="0" Height="350">
                    <FlowDocument>
                        <Paragraph>
                            <Run x:Name="run" Text="{Binding Path=GeneratedInterfaceString}" />
                        </Paragraph>
                    </FlowDocument>
                </FlowDocumentReader>-->
                <!--<GridSplitter Grid.Column="1" Width="5" Height="350"/>-->
                <TabControl Grid.Column="0" Grid.ColumnSpan="3" Height="400">
                    <TabItem Header="Violations Details">
                        <ListView ItemsSource="{Binding NameRuleErrors, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Violation" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Cursor="Hand" Text="{Binding NameRuleViolationString, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Suggestion, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="NameSpace" Width="100" DisplayMemberBinding="{Binding NameSpace, UpdateSourceTrigger=PropertyChanged}" />
                                    <GridViewColumn Header="ClassName" Width="100" DisplayMemberBinding="{Binding ClassName, UpdateSourceTrigger=PropertyChanged}" />
                                    <GridViewColumn Header="Method" Width="100" DisplayMemberBinding="{Binding Method, UpdateSourceTrigger=PropertyChanged}" />
                                    <GridViewColumn Header="Param" Width="100" DisplayMemberBinding="{Binding Parameter, UpdateSourceTrigger=PropertyChanged}" />
                                    <GridViewColumn Header="PropOrField" Width="100" DisplayMemberBinding="{Binding PropOrField, UpdateSourceTrigger=PropertyChanged}" />

                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>

                    <TabItem Header="Extracted Interface">
                        <UniformGrid Columns="2">
                            <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Background="LightGreen">
                                <FlowDocumentReader Background="LightGray" Width="580" Height="290" Margin="10" ToolTip="Original Code" Cursor="Hand">
                                    <FlowDocument>
                                        <Paragraph>
                                            <Run Text="{Binding ElementName=mainViewWin,Path=DataContext.OrigCodeString, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                                        </Paragraph>
                                    </FlowDocument>
                                </FlowDocumentReader>
                            </Border>
                            <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Background="LightSkyBlue">
                                <FlowDocumentReader Background="LightGray" Width="580" Height="290" Margin="10" ToolTip="Extracted interface" Cursor="Hand">
                                    <FlowDocument>
                                        <Paragraph>
                                            <Run x:Name="run" Text="{Binding Path=GeneratedInterfaceString}" />
                                        </Paragraph>
                                    </FlowDocument>
                                </FlowDocumentReader>
                            </Border>

                        </UniformGrid>


                    </TabItem>
                </TabControl>
            </Grid>
        </Expander>
    </Grid>
</Window>
